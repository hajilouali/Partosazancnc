@model Partosazancnc.Models.LayerSliders

@{
    ViewBag.Title = "ویرایش  لایه ";
}



@using (Html.BeginForm("EditLayerToSlider", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(Model => Model.SlideID)
    @Html.HiddenFor(Model => Model.LayerImage)
    @Html.HiddenFor(Model => Model.LayerID)
    <div class="form-horizontal">
        <div class="col-md-8">
            <div class="panel">
                <div class="panel-body">
                    <div class="form-group">
                        <label class="col-md-2 control-label">انتخاب نوع لایه</label>
                        <div class="col-md-10">
                            <select required="" onchange="ckLayer()" id="ch_val" class="form-control">
                                <option>انتخاب کنید</option>
                                <option value="1">عکس</option>
                                <option value="2">نوشته</option>
                            </select>
                        </div>
                    </div>

                    <div id="idPic">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LayerImage, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="text-center">
                                    <img src="@Model.LayerImage" width="250" class=" mx-auto d-block"/>
                                </div>
                                <input type="file" name="img" id="img"/>
                                @Html.ValidationMessageFor(model => model.LayerImage, "", new {@class = "text-danger"})
                            </div>
                        </div>
                    </div>

                    <div id="idtext">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LayerText, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LayerText, new { htmlAttributes = new { @class = "form-control", } })
                                @Html.ValidationMessageFor(model => model.LayerText, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.CostomCss, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CostomCss, new { htmlAttributes = new { @class = "form-control", @rows = 7 } })
                            @Html.ValidationMessageFor(model => model.CostomCss, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ClassCostom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ClassCostom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ClassCostom, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel">
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.data_x, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.data_x, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.data_x, "", new { @class = "text-danger" })
                        </div>
                        <small class="text-muted block">لطفا محل را با "left","center","right" و یا اندازه px ارسال بفرمایید</small>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_y, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.data_y, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.data_y, "", new { @class = "text-danger" })
                        </div>
                        <small class="text-muted block">لطفا محل را با "left","center","right" و یا اندازه px ارسال بفرمایید</small>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_speed, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            <input type="number" value="@Model.data_speed" class="form-control " name="data_speed">
                            @Html.ValidationMessageFor(model => model.data_speed, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_start, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            <input type="number" value="@Model.data_start" class="form-control " name="data_start">
                            @Html.ValidationMessageFor(model => model.data_start, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_easing, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.DropDownList("data_easing", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.data_easing, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_splitin, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.DropDownList("data_splitin", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.data_splitin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_splitout, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.DropDownList("data_splitout", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.data_splitout, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_elementdelay, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            <input type="text" value="@Model.data_elementdelay" class="form-control masked" name="data_elementdelay" data-format="9.99" data-placeholder="X" placeholder="">
                            @Html.ValidationMessageFor(model => model.data_elementdelay, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_endelementdelay, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            <input type="text" value="@Model.data_endelementdelay" class="form-control masked" name="data_endelementdelay" data-format="9.99" data-placeholder="X" placeholder="">
                            @Html.ValidationMessageFor(model => model.data_endelementdelay, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_captionhidden, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.DropDownList("data_captionhidden", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.data_captionhidden, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_endspeed, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            <input type="number" value="@Model.data_endspeed" class="form-control " name="data_endspeed" max="9999" placeholder="">
                            @Html.ValidationMessageFor(model => model.data_endspeed, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_endeasing, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            @Html.DropDownList("data_endeasing", null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.data_endeasing, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.data_hoffset, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            <input value="@Model.data_hoffset" type="number" class="form-control " name="data_hoffset" max="999" min="-999" placeholder="">

                            @Html.ValidationMessageFor(model => model.data_hoffset, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>







        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="ذخیره" class="btn btn-success btn-large btn-block" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("بازگشت به اسلاید ها", "LayerSlider", new { id = @Model.SlideID })
</div>

@section Scripts
{
    <script src="~/ckeditor/ckeditor.js"></script>
    <script src="~/ckeditor/adapters/jquery.js"></script>


    <script>
        $(function () {
            $('#LayerText').ckeditor();

        });

        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#thumbnail').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#img").change(function () {
            readURL(this);
        });
    </script>
    <script>
    $(function () {
        var textval='@(Model.LayerText!=null?"1":"")';
        var imageval ="@Model.LayerImage";
        if (textval!="") {
            $("#idPic").hide();
            $('#ch_val option[value="2"]').prop('selected', true);
        }
        if (imageval!="") {
            $("#idtext").hide();
            $('#ch_val option[value="1"]').prop('selected', true);
        }   
            
        });

        function ckLayer() {
            var ch = $("#ch_val").val();
            if (ch == "1") {
                $("#idtext").hide();
                $("#idPic").show();
            }
            else {
                if (ch == "2") {
                    $("#idPic").hide();
                    $("#idtext").show();
                }
                else {
                    $("#idPic").hide();
                    $("#idtext").hide();
                }
            }

        }
    </script>
}
